options:
	gigacolour: skript color from hex "202225"
	trollcolour: skript color from hex "dcdcdc"
	zencolour: skript color from hex "dcdcdc"

expression:
    return type: text
    patterns:
        normal[ ]format from %timespan%
        normalize[d] %timespan%
    get:
        set {_time} to (expr-1.getTicks()/20)
        set {_d} to rounded down ((({_time}/60)/60)/24)
        remove {_d}*60*60*24 from {_time}
        set {_h} to rounded down ((({_time}/60)/60))
        remove {_h}*60*60 from {_time}
        set {_m} to rounded down ((({_time}/60)))
        remove {_m}*60 from {_time}
        set {_s} to rounded down ((({_time})))
        loop "d", "h", "m" and "s":
            {_%loop-value%} < 10:
                set {_%loop-value%} to "0%{_%loop-value%}%"
            {_%loop-value%} is not set:
                set {_%loop-value%} to "00"
            {_%loop-value%} is 0:
                set {_%loop-value%} to "00"
            add "%{_%loop-value%}%" to {_t::*}
        loop 2 times:
            first element out of {_t::*} is "00":
                remove first element out of {_t::*} from {_t::*}
        return join {_t::*} by ":"

function toSeconds(timespan: timespan) :: number:
	set {_totaltime} to {_timespan}
	set {_totaltime} to "%{_totaltime}%" # have to set it to its self, it wont edit otherwise
	replace all "days" and "day" with "* 86400" in {_totaltime}
	replace all "hours" and "hour" with "* 3600" in {_totaltime} # checks for plural to not end up with "1s * 3600" or something similar
	replace all "minutes" and "minute" with "* 60" in {_totaltime}
	replace all "seconds" and "second" with "" in {_totaltime}
	replace all "and " and ", " with "+ " in {_totaltime}
	set {_totaltime} to evaluate expr "%{_totaltime}%"
	return {_totaltime} # if used within a loop, be sure to add the result to a variable

function AND(conditions: booleans) :: boolean:
	if {_conditions::*} contains false:
		return false
	return true
	
function OR(conditions: booleans) :: boolean:
	if {_conditions::*} contains true:
		return true
	return false

function createQuickEmbed(title:string,description:string) :: embedbuilder:
	if {_title} is not "":
		make embed:
			set title of embed to {_title}
			set description of embed to {_description}
			set color of embed to {@zencolour}
	else: #Inefficient but idk, i dont do skript -9382
		make embed:
			set description of embed to {_description}
			set color of embed to {@zencolour}
	return last embed

function helpMessage(string: string, u: user, g: guild) :: embedbuilder:
	set {_guild} to {_g}
	set {_g} to discord id of {_g}
	make embed:
		set color of embed to {@zencolour}
		add "**Syntax**%nl%`<>` is a required argument, `[]` is an optional argument%nl%" to {_embed::*}
		loop all discord command:
			if {_string} contains discord command category of loop-value:
				add "**`?%loop-value% %usage of loop-value%`** - %description of loop-value%" to {_embed::*}
			if size of {_embed::*} != 0:
				set description of embed to join {_embed::*} with nl
				set title of embed to "%{_string}%"
				set thumbnail of embed to avatar of self member of bot named "%{_bot}%" in {_guild}
			else:
				set {_categories::*} to category of loop-value
	return last embed

import:
	ch.njol.skript.log.SkriptLogger

discord command reload:
	prefixes: ?
	category: admin
	description: Reloads the bot code
	executable in: guild
	trigger:
		if id of event-member is "211789389401948160" or "211789389401948160":
			execute console command "skript reload trollvibe"
			reply with "reloaded the bot."
			exit
		send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel

discord command help [<string>]:
	prefixes: ?
	category: general
	aliases: cmds
	description: Explains commands and their usage.
	executable in: guild
	trigger:
		loop all discord command:
			if "general" contains discord command category of loop-value:
				add "`%loop-value%`" to {_general::*}
				replace every "and " and "," in {_general::*} with "" 
			if "music" contains discord command category of loop-value:
				add "`%loop-value%`" to {_music::*}
				replace every "and " and "," in {_music::*} with "" 
			if "dj" contains discord command category of loop-value:
				add "`%loop-value%`" to {_dj::*}
				replace every "and " and "," in {_dj::*} with ""
			if "admin" contains discord command category of loop-value:
				add "`%loop-value%`" to {_admin::*}
				replace every "and " and "," in {_admin::*} with "" 
		replace every "clear" in {_dj::*} with "clear queue"
		make embed:
			set title of embed to "üìî `Commands`"
			add "Click the buttons to get more information on a group.%nl%" to {_l::*}
			add "**General**" to {_l::*}
			add "%{_general::*}%%nl%" to {_l::*}
			add "**Music**" to {_l::*}
			add "%{_music::*}%%nl%" to {_l::*}
			add "**DJ**" to {_l::*}
			add "%{_dj::*}%%nl%" to {_l::*}
			add "**Admin**" to {_l::*}
			add "%{_admin::*}%%nl%" to {_l::*}
			replace every "and " and "," in {_l::*} with ""
			set description of embed to join {_l::*} with nl
			set color of embed to {@zencolour}
		send last embed to event-channel and store it in {embed}
		set {_row} to new buttons row
		add new button with id "general" with style secondary with content "General" to buttons of {_row}
		add new button with id "music" with style secondary with content "Music" to buttons of {_row}
		add new button with id "dj" with style secondary with content "DJ" to buttons of {_row}
		add new button with id "admin" with style secondary with content "Admin" to buttons of {_row}
		add row {_row} to message {embed}

on button click:
	if event-button is "general":
		edit {embed} to show helpMessage("üìñ `General`", event-user, event-guild) and keep buttons
	if event-button is "music":
		edit {embed} to show helpMessage("üîä `Music`", event-user, event-guild) and keep buttons
	if event-button is "dj":
		edit {embed} to show helpMessage("üéß `DJ`", event-user, event-guild) and keep buttons
	if event-button is "admin":
		edit {embed} to show helpMessage("üìë `Admin`", event-user, event-guild) and keep buttons

discord command blockchannel <text>:
	prefixes: ?
	category: admin
	usage: <channel id>
	aliases: bc
	description: makes it so the bot cant be used in certain specified channels.
	executable in: guild
	trigger:
		if arg 1 is not set:
			send createQuickEmbed("","‚ùå `You need to specify a discord channel id.`") to event-channel
			exit
		loop text channels of event-guild:
			if arg-1 is discord id of loop-value:
				add arg-1 to {%id of event-guild%.blockedchannels::*}
				send "‚úÖ added %arg-1% to blocked channels." to event-channel
				exit
			else:
				continue
		send createQuickEmbed("","‚ùå `Could not find the discord channel.`") to event-channel
		exit

discord command soundcloud [<string>]:
	prefixes: ?
	category: music
	usage: <text>
	aliases: sc
	description: Plays a song from soundcloud.
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		if arg 1 is not set:
			send createQuickEmbed("","‚ùå `You need to specify a soundcloud search term.`") to event-channel
			exit
		set {_a} to voice channel of event-member in event-guild
		if {_a} is not set:
			send createQuickEmbed("","‚ùå `You need to be in a voice channel to use this command.`") to event-channel
			exit
		if {%id of event-guild%.blockedchannels::*} contains discord id of event-channel:
			loop {%id of event-guild%.blockedchannels::*}:
				add "%channel with id loop-value%" to {_blockedchannellist::*}
			send createQuickEmbed("","‚ùå `You can use this command anywhere apart from %{_blockedchannellist::*}%`") to event-channel
			clear {%id of event-guild%.ratelimit}
			exit
		connect event-bot to voice channel of event-member
		search in soundcloud for arg-1 and store it in {_searchresult::*}
		add {_searchresult::1} to {%id of event-guild%.track::*}
		if {%id of event-guild%.track::1} is not set:
			send "no song was found" to event-channel
			exit
		make embed:
			set title of embed to "%{%id of event-guild%.track::1}%"
			set thumbnail of embed to track thumbnail of {%id of event-guild%.track::1}
			set title url of embed to track url of {%id of event-guild%.track::1}
			set color of embed to {@zencolour}
			add "Duration: `%track duration of {%id of event-guild%.track::1}%`" to {_l::*}
			add "Channel: `%track author of {%id of event-guild%.track::1}%`" to {_l::*}
			set description of embed to join {_l::*} with nl
		send last embed to event-channel
		wait 1 second
		play {%id of event-guild%.track::1} in event-guild
		set {unixtime} to unix timestamp of now
		clear {_searchresult::*}
		clear {%id of event-guild%.track::1}
		set {%id of event-guild%.musicchannel} to event-channel
		exit

discord command play [<string>]:
	prefixes: ?
	category: music
	usage: <text/url>
	aliases: p, youtube
	description: Plays songs or playlists from youtube.
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		if {%id of event-guild%.ratelimit} is set:
			send createQuickEmbed("","‚ùå `You are doing this command too quickly!`") to event-channel
			clear {%id of event-guild%.ratelimit}
			exit
		set {%id of event-guild%.ratelimit} to 1
		if arg 1 is not set:
			send createQuickEmbed("","‚ùå `You need to specify a URL or a Youtube search term.`") to event-channel
			clear {%id of event-guild%.ratelimit}
			exit
		set {_a} to voice channel of event-member in event-guild
		if {_a} is not set:
			send createQuickEmbed("","‚ùå `You need to be in a voice channel to use this command.`") to event-channel
			clear {%id of event-guild%.ratelimit}
			clear {%id of event-guild%.ratelimit}
			exit
		if {%id of event-guild%.blockedchannels::*} contains discord id of event-channel:
			loop {%id of event-guild%.blockedchannels::*}:
				add "%channel with id loop-value%" to {_blockedchannellist::*}
			send createQuickEmbed("","‚ùå `You can use this command anywhere apart from %{_blockedchannellist::*}%`") to event-channel
			clear {%id of event-guild%.ratelimit}
			exit
		if arg-1 contains "media.discordapp.net" or "cdn.discordapp.com":
			send createQuickEmbed("","‚ùå You need to specify a URL or a Youtube search term.") to event-channel
			clear {%id of event-guild%.ratelimit}
			exit
		set {playcheck} to true
		connect event-bot to voice channel of event-member
		if arg-1 contains "http" or "https":
			if arg-1 contains "https://youtu.be/" or "youtube.com/watch?v=":
				connect event-bot to voice channel of event-member
				search in youtube for arg-1 and store it in {_searchresult::*}
				add {_searchresult::1} to {%id of event-guild%.track::*}
				if {%id of event-guild%.track::1} is not set:
					send createQuickEmbed("","‚ùå `No results were found.`") to event-channel
					clear {%id of event-guild%.ratelimit}
					exit
				wait 1 second
				play {%id of event-guild%.track::1} in event-guild
				set {unixtime} to unix timestamp of now
				clear {%id of event-guild%.ratelimit}
				set {_current} to the track the bot is playing in the event-guild
				make embed:
					set {_thumbnail} to track thumbnail of {_searchresult::1}
					replace every "maxresdefault.jpg" in {_thumbnail} with "0.jpg"
					set thumbnail of embed to {_thumbnail}
					set title of embed to "%{_searchresult::1}%"
					set title url of embed to track url of {_searchresult::1}
					set color of embed to {@zencolour}
					add "Duration: `%track duration of {_searchresult::1}%`" to {_l::*}
					add "Channel: `%track author of {_searchresult::1}%`" to {_l::*}
					set description of embed to join {_l::*} with nl
				clear {_searchresult::*}
				clear {%id of event-guild%.track::1}
				set {%id of event-guild%.musicchannel} to event-channel
				clear {%id of event-guild%.ratelimit}
			if arg-1 contains "youtube.com/playlist?list=":
				search in youtube for arg-1 and store it in {_searchresult::*}
				add {_searchresult::*} to {%id of event-guild%.track::*}
				wait 1 second
				play {_searchresult::*} in event-guild
				set {unixtime} to unix timestamp of now
				clear {finaltime}
				clear {%id of event-guild%.ratelimit}
				loop {_searchresult::*}:
					set {_ans} to toSeconds(track duration of loop-value)
					add {_ans} to {_time}
				set {_time} to "%{_time}% seconds" parsed as timespan
				make embed:
					set title of embed to "Added %size of {_searchresult::*}% tracks to the queue."
					set {_thumbnail} to track thumbnail of {_searchresult::1}
					replace every "maxresdefault.jpg" in {_thumbnail} with "0.jpg"
					set thumbnail of embed to {_thumbnail}
					set title url of embed to arg-1
					set color of embed to {@zencolour}
					add "Duration: `%{_time}%`" to {_l::*}
				set description of embed to join {_l::*} with nl
				send last embed to event-channel
				clear {totaltime}
				clear {_searchresult::*}
				clear {%id of event-guild%.track::1}
				clear {%id of event-guild%.ratelimit}
				set {%id of event-guild%.musicchannel} to event-channel
				exit
		if arg-1 does not contain "www.youtube.com/playlist?list=" or "www.youtube.com/watch?v=" or "https://youtu.be/":
			search in youtube for arg-1 and store it in {_searchresult::*}
			clear {%id of event-guild%.ratelimit}
			add {_searchresult::1} to {%id of event-guild%.track::*}
			if {%id of event-guild%.track::1} is not set:
				send createQuickEmbed("","‚ùå `No results were found.`") to event-channel
				clear {%id of event-guild%.ratelimit}
				exit
		if arg-1 does not contain "http" or "https":
			search in youtube for arg-1 and store it in {_searchresult::*}
			add {_searchresult::1} to {%id of event-guild%.track::*}
			wait 1 second
			clear {%id of event-guild%.ratelimit}
			play {_searchresult::1} in event-guild
			set {unixtime} to unix timestamp of now
			set {_current} to track the bot is playing in the event-guild
			make embed:
				set title of embed to "%{_searchresult::1}%"
				set {_thumbnail} to track thumbnail of {_searchresult::1}
				replace every "maxresdefault.jpg" in {_thumbnail} with "0.jpg"
				set thumbnail of embed to {_thumbnail}
				set color of embed to {@zencolour}
				set title url of embed to track url of {_searchresult::1}
				add "Duration: `%track duration of {_searchresult::1}%`" to {_l::*}
				add "Channel: `%track author of {_searchresult::1}%`" to {_l::*}
				set description of embed to join {_l::*} with nl
			send last embed to event-channel
			clear {%id of event-guild%.track::1}
			clear {%id of event-guild%.ratelimit}
			set {%id of event-guild%.musicchannel} to event-channel
			exit
		clear {%id of event-guild%.ratelimit}
		send last embed to event-channel

discord command song [text]:
	executable in: guild
	aliases: playfile, pf
	category: music
	prefixes: ?
	usage: <url/dir>
	description: Plays a song from a compatible link.
	trigger:
		if event-member has permission administrator:
			if "%roles of event-member%" contains "%{%event-guild%.blockeddj::*}%":
				send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
				exit
			set {_a} to voice channel of event-member in event-guild
			if {_a} is not set:
				send createQuickEmbed("","? `You need to be in a voice channel to use this command.`") to event-channel
				exit
			connect event-bot to voice channel of event-member
			delete file "plugins/FILE.mp3"
			set {_att::*} to attachments of event-message
			set {_url} to url of {_att::1}
			if "%{_att::1}%" ends with ".mp3" or ".mp4" or ".ogg" or ".flac" or ".wav" or ".mov" or ".m4a" or ".webm":
				download file from "%{_url}%" to file "plugins/FILE.mp3"
				wait 2 seconds
				load locale track from "plugins/FILE.mp3" and store it in {_track}
				if {_track} is not set:
					send "file not found" to event-channel
				else:
					make embed:
						set {_thumbnail} to track thumbnail of {_track}
						set thumbnail of embed to {_thumbnail}
						set title of embed to {_track}
						if title of embed is not set:
							set title of embed to "Local file"
						set title url of embed to {_url}
						set color of embed to {@zencolour}
						add "Duration: `%track duration of {_track}%`" to {_l::*}
						set description of embed to join {_l::*} with nl
					send last embed to event-channel
					connect event-bot to voice channel of event-member
					play {_track} in event-guild
			else:
				send createQuickEmbed("","‚ùå `Unsupported file format.`") to event-channel
				exit
			exit
		send createQuickEmbed("","‚ùå `Dev Command.`") to event-channel

on track start seen by "trollvibe":
	clear {userid::*}
	clear {votecount}
	clear {temp}
	clear {halfmembercount}
	clear {aaa}
	if repeating state of event-guild is yes:
		set {_a} to true
	set {trackcurrent} to the track the bot is playing in the event-guild
	wait 1 second
	if {trackcurrent} is not set:
		send createQuickEmbed("**Error!**","‚ùå `Skipped the track as it was age restricted.`") to {%id of event-guild%.musicchannel}
		clear {trackcurrent}
		exit
	if {_a} is not set:
		set {%id of event-guild%.queue::*} to queue of event-guild
		set {_current} to the track the bot is playing in the event-guild
		add {_curent} and {%id of event-guild%.queue::*} to {_%id of event-guild%.lengthcheck::*}
		set {_thumbnail} to track thumbnail of track the bot is playing in the event-guild
		replace every "maxresdefault.jpg" in {_thumbnail} with "0.jpg"
		if size of {_%id of event-guild%.lengthcheck::*} < 1:
			exit
		make embed:
			set thumbnail of embed to {_thumbnail}
			set color of embed to {@zencolour}
			set title of embed to "**Now playing: %{_current}%**"
			add "**Channel:**%nl%%track author of {_current}%%nl%" to {_l::*}
			set title url of embed to "%track url of {_current}%"
			add inline field named "**Duration:**" with value normalized track duration of the track the bot is playing in the event-guild to fields of embed
			set description of embed to join {_l::*} with nl
		send last embed to {%id of event-guild%.musicchannel}
		exit

on track end seen by "trollvibe":
	set {%id of event-guild%.track::*} to queue of event-guild
	if bot is repeating in event-guild:
		exit
	if {%id of event-guild%.track::1} is set:
		skip track of event-guild
		clear {%id of event-guild%.track::1}
		wait 0.2 seconds
		play {%id of event-guild%.track::1} in event-guild
	clear {userid::*}
	clear {votecount}
	clear {temp}
	clear {halfmembercount}
	clear {aaa}
	wait 1 minute
	if bot is not playing in event-guild:
		disconnect bot of event-guild

discord command loop:
	executable in: guild
	aliases: unloop
	category: music
	description: Loops or unloops the current track that is being played.
	prefixes: ?
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå Insufficient permissions.") to event-channel
			exit
		if bot is repeating in event-guild:
			set repeating state of event-guild to no
			send createQuickEmbed("‚ùå üîÅ","No longer looping the current track.") to event-channel
		else:
			set repeating state of event-guild to yes
			send createQuickEmbed("‚úÖ üîÅ","Looping the current track.") to event-channel

discord command skip:
	prefixes: ?
	category: music
	description: Casts a vote or skips the current song.
	executable in: guild
	trigger:
		set {_a} to voice channel of event-member in event-guild
		if {_a} is not set:
			send createQuickEmbed("","‚ùå `You need to be in a voice channel to use this command.`") to event-channel
			exit
		set {members::*} to audio members of {_a}
		loop {members::*}:
			if loop-value is a discord bot:
				remove loop-value from {members::*}
		set {temp} to size of {members::*}
		if {userid::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `You have already voted to skip.`") to event-channel
			exit
		set {_temptrack} to the track the bot is playing in the event-guild
		if {_temptrack} is not set:
			send createQuickEmbed("","‚ùå `No track is playing right now.`") to event-channel
			exit
		remove 1 from {temp}
		add 1 to {votecount}
		add id of event-member to {userid::*}
		set {halfmembercount} to round({temp}/2)
		clear {temp}
		if {votecount} < {halfmembercount}:
			make embed:
				set {_B::1} to "‚úÖ You voted to skip the current track."
				set footer of embed to "%{votecount}% of %{halfmembercount}% needed to skip"
				set description of embed to join {_B::*} with nl
				set color of embed to {@zencolour}
			send last embed to event-channel
		else:
			send createQuickEmbed("","‚è© `Skipped the current track.`") to event-channel
			skip track of event-guild
			clear {userid::*}
			clear {votecount}
			clear {temp}
			clear {halfmembercount}
			clear {aaa}

discord command join:
	description: Makes the bot forcefully join the voice channel.
	category: dj
	prefixes: ?
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		loop {%id of event-guild%.dj::*}:
			if event-member has role with id loop-value or {%event-guild%.boostrole}:
				connect event-bot to voice channel of event-member
				exit
			if event-member does not have role with id loop-value or {%event-guild%.boostrole}:
				send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
				exit

discord command disconnect:
	description: Makes the bot forcefully leave the voice channel and clears the queue.
	category: dj
	prefixes: ?
	aliases: leave
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		set {trackcurrent} to "temp"
		loop {%id of event-guild%.dj::*}:
			if event-member has role with id loop-value or {%event-guild%.boostrole}:
				stop queue of event-guild
				skip track of event-guild
				disconnect bot of event-guild
				set repeating state of event-guild to no
				set {%id of event-guild%.track::*} to queue of event-guild
				send createQuickEmbed("", "üì≠ `Successfully disconnected.`") to event-channel
				exit
		send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
		wait 1 second
		clear {trackcurrent}
		exit


discord command forceskip:
	description: Skips the current song.
	aliases: fs
	prefixes: ?
	category: dj
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		if the bot is not playing in the event-guild:
			send createQuickEmbed("","‚ùå `I am not playing anything.`") to event-channel
			exit
		loop {%id of event-guild%.dj::*}:
			if event-member has role with id loop-value or {%event-guild%.boostrole}:
				skip track of event-guild
				clear {%id of event-guild%.track::1}
				wait 1 second
				if {%id of event-guild%.track::1} is set:
					play {%id of event-guild%.track::1} in event-guild
				send createQuickEmbed("", "‚è© `Skipped the current track.`") to event-channel
				exit
			else:
				continue
		send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
		exit

discord command say <channel> <text>:
	prefixes: ?
	description: says something anonymously
	category: admin
	trigger:
		if event-member has permission message manage:
			send "%arg-2%" to arg-1

discord command exec <text>:
	prefixes: ?
	description: Executes some skript code.
	category: admin
	trigger:
		if id of event-member is "211789389401948160" or "260016427900076033" or "211789389401948160":
			eval arg-1 and store the errors in {_errors}
		else:
			if id of event-user is "211789389401948160" or "260016427900076033" or "211789389401948160":
				reply with "Only the owner can use exec"
		if {_errors} is set:
			reply with "Error: %nl%```%{_errors}%```" # i am using reply here so that i can execute code in dms as well.

command /eval <text>:
	trigger:
		eval arg-1 and store the errors in {_errors}
		if {_errors} is set:
			send "Error: %nl%```%{_errors}%```" to console

discord command np:
	aliases: nowplaying
	description: Shows you what song is playing right now.
	prefixes: ?
	category: general
	executable in: guild
	trigger:
		set {%id of event-guild%.queue::*} to queue of event-guild
		set {_current} to the track the bot is playing in the event-guild
		if {_current} is not set:
			send createQuickEmbed("","‚ùå `I am not playing anything.`") to event-channel
			exit
		set {totaltime} to toSeconds(track duration of track bot is playing in event-guild)
		set {tracktime} to toSeconds(track position of track event-bot is playing in event-guild)
		#set {_timeleft} to {totaltime} - {tracktime}
		set {_location} to 20-round( ({totaltime}-{tracktime})/{totaltime} * 20)
		if {_location} < 0:
			send "**an error has occurred**, location is less than 0 on this track. Report this here: https://www.github.com/ZeNyfh/gigavibe/issues" to event-channel
			exit
		set {_line} to "0‚îÅ1‚îÅ2‚îÅ3‚îÅ4‚îÅ5‚îÅ6‚îÅ7‚îÅ8‚îÅ9‚îÅ10‚îÅ11‚îÅ12‚îÅ13‚îÅ14‚îÅ15‚îÅ16‚îÅ17‚îÅ18‚îÅ19‚îÅ20"
		set {_linesplit::*} to {_line} split at "%{_location}%"
		set {_line} to "%{_linesplit::1}%üîò%{_linesplit::2}%"
		clear {_linesplit::1} and {_linesplit::2}
		set {_temp} to concatenate {_linesplit::*}
		set {_line} to "%{_line}%%{_temp}%"
		replace every "0" and "1" and "2" and "3" and "4" and "5" and "6" and "7" and "8" and "9" with "" in {_line}
		replace every "<none>" with "" in {_line}
		set {_thumbnail} to track thumbnail of the track the bot is playing in the event-guild
		make embed:
			set color of embed to {@zencolour}
			set {_l} to length of "%{_current}%"
			if {_l} < 55:
				set title of embed to "**%{_current}%**%nl%"
			else:
				set {_title} to "%{_current}%"
				set {_title} to subtext of {_title} from characters 1 to 54
				set title of embed to "**%{_title}%...**%nl%"
			set title url of embed to track url of {_current}
			replace every "maxresdefault.jpg" in {_thumbnail} with "0.jpg"
			set thumbnail of embed to {_thumbnail}
			add "```%{_line}% %normalized track position of the track the bot is playing in the event-guild% / %normalized track duration of the track the bot is playing in the event-guild%```" to {_l::*}
			if {%id of event-guild%.queue::1} is set:
				add inline field named "**Up next:**" with value "%{%id of event-guild%.queue::1}%" to fields of embed
			add "**Channel:**%nl%%track author of {_current}%%nl%" to {_l::*}
			if bot is repeating in event-guild:
				add "%nl%üîÑ **Looping**" to {_l::*}
			set description of embed to join {_l::*} with nl
		send last embed to event-channel
		clear {tracktime}
		clear {totaltime}

discord command github:
	prefixes: ?
	aliases: bug
	description: Sends the github link.
	category: general
	executable in: guild
	trigger:
		make embed:
			set color of embed to {@zencolour}
			add "‚ùï `Use this for bug reports and feature requests ONLY`%nl%" to {_a::*}
			add "‚ùï `When making an issue, make sure to specify which bot has the bug (trollvibe or trollvibe)`%nl%" to {_a::*}
			add "https://github.com/ZeNyfh/gigavibe/issues" to {_a::*}
			set description of embed to join {_a::*} with nl
		send last embed to event-channel

discord command shuffle:
	prefixes: ?
	category: music
	description: Shuffles the current queue.
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		loop {%id of event-guild%.dj::*}:
			if event-member has role with id loop-value or {%event-guild%.boostrole}:
				send createQuickEmbed("", "‚úÖ Shuffled the queue.") to event-channel
				set {_current} to the track the bot is playing in the event-guild
				shuffle current queue of the event-guild
				set {%id of event-guild%.queue::*} to queue of event-guild
				stop current queue of event-guild
				add {_current} to {%id of event-guild%.queue::*}
				wait 1.5 second
				play {%id of event-guild%.queue::*} in event-guild
				exit
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel

discord command blacklist <text>:
	aliases: bl
	prefixes: ?
	executable in: guild
	category: admin
	description: Adds a person to the blacklist.
	trigger:
		if event-member has permission administrator:
			if arg-1 is "list":
				send "%{%event-guild%.blockeddj::*}%" to event-channel
			else:
				add arg-1 to {%event-guild%.blockeddj::*}
				send createQuickEmbed("","‚úÖ `added %arg-1% to the list.`") to event-channel
		else:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit

discord command clearblacklist [<text>]:
	aliases: blacklistclear, blacklistremove
	prefixes: ?
	executable in: guild
	category: admin
	description: Clears the entire blacklist or removes a member from it.
	usage: [<member_id>]
	trigger:
		if event-member has permission administrator:
			if arg-1 is set:
				loop {%event-guild%.blockeddj::*}:
					add 1 to {_num}
					if loop-value is arg-1:
						clear {%event-guild%.blockeddj::%{_num}%}
						send createQuickEmbed("","‚úÖ `removed %loop-value% from the blacklist`") to event-channel
						exit
					else:
						continue
				send createQuickEmbed("","‚ùå `User isnt blacklisted.`") to event-channel
			else:
				clear {%event-guild%.blockeddj::*}
				send createQuickEmbed("","‚úÖ `cleared the blacklist`") to event-channel
		else:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit


on button click:
	set {%id of event-guild%.queue::*} to queue of event-guild
	clear {finaltime}
	set {_curfinaltime} to toSeconds(track duration of track the bot is playing in the event-guild)
	add {_curfinaltime} to {finaltime}
	if {%id of event-guild%.queue::*} is set:
		loop {%id of event-guild%.queue::*}:
			set {_finaltime} to toSeconds(track duration of loop-value)
			add {_finaltime} to {finaltime}
			add 1 to {_count}
	set {finaltime} to "%{finaltime}% seconds" parsed as timespan
	set {finaltime} to "%{finaltime}%"
	if event-button is "next":
		add 1 to {%id of event-guild%.queuepage}
	if event-button is "back":
		subtract 1 from {%id of event-guild%.queuepage}
	set {_maxpage} to floor({_count}/5)
	if {%id of event-guild%.queuepage} is more than {_maxpage}: #Wrap around -9382
		set {%id of event-guild%.queuepage} to 0
	if {%id of event-guild%.queuepage} is less than 0:
		set {%id of event-guild%.queuepage} to {_maxpage}
	defer the interaction
	make embed:
		set {_thumbnail} to track thumbnail of the track the bot is playing in the event-guild
		set color of embed to {@zencolour}
		set footer of embed to "Queue length: %{finaltime}%"
		set {_B::1} to "**__Now playing__**: %nl%[**%the track the bot is playing in the event-guild%**](%track url of the track the bot is playing in the event-guild%)%nl%"
		set {_index} to 1
		loop 5 times: #Looped so it looks cleaner -9382
			set {_position} to "%{_index}+5*{%id of event-guild%.queuepage}%"
			set {_B::%{_index}+1%} to "%{_position}%. [%{%id of event-guild%.queue::%{_position}%}%](%track url of {%id of event-guild%.queue::%{_position}%}%)"
			add 1 to {_index}
		if {_count} > 1:
			set footer of embed to "%{_count}% Songs queued | Length: %{finaltime}%%nl%Page: %{%id of event-guild%.queuepage}+1%"
		else:
			set footer of embed to "%{_count}% Song queued | Length: %{finaltime}%%nl%Page: %{%id of event-guild%.queuepage}+1%"
		set thumbnail of embed to {_thumbnail}
		set description of embed to join {_B::*} with nl
	edit {queueembed} to show last embed and keep buttons

discord command clear queue:
	prefixes: ?
	category: dj
	usage: queue
	description: Clears the current queue.
	executable in: guild
	trigger:
		if {%event-guild%.blockeddj::*} contains id of event-member:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit
		loop {%id of event-guild%.dj::*}:
			if "%roles of event-member%" does not contain "%role with id loop-value%":
				continue
			if "%roles of event-member%" contains "%{%event-guild%.blockeddj::*}%":
				continue
				exit
			if "%roles of event-member%" contains "%role with id loop-value%":
				stop queue of event-guild
				clear {%id of event-guild%.track::*}
				clear {%id of event-guild%.queue::*}
				send createQuickEmbed("", "‚úÖ Cleared the queue.") to event-channel
				exit
		send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel

discord command download <text>:
	prefixes: ?
	aliases: dl, ytdl
	category: general
	usage: <track url>
	description: Downloads and sends the mp3 of a video from most sites
	executable in: guild
	trigger:
		set {_track} to arg-1
		set {num.%id of event-message%} to id of event-message
		if arg-1 is set:
			if "%arg-1%" contains "spotify":
				send createQuickEmbed("","‚ùå `Spotify is not supported.`") to event-channel
				exit
			if arg-1 contains "youtu.be":
				replace every "youtu.be/" with "youtube.com/watch?v=" in {_track}
			if arg-1 contains "youtube.com":
				replace every "&" with "##" in {_track}
				if arg-1 contains "shorts/":
					replace every "shorts/" with "watch?v=" in {_track}
			send typing in the event-channel using the bot "trollvibe"
			if the discord boost amount of event-guild is greater than or equal to 7:
				set line 1 in file "plugins/ytdl.sh" to "yt-dlp -o ""%{num.%id of event-message%}%.%%(ext)s"" %{_track}% -f ""[filesize<50m]"" -x --audio-format mp3"
			else:
				set line 1 in file "plugins/ytdl.sh" to "yt-dlp -o ""%{num.%id of event-message%}%.%%(ext)s"" %{_track}% -f ""b"" -S ""filesize~8m"" -x --audio-format mp3"
			wait 0.5 seconds
			start file path "plugins/ytdl.sh"
			loop 120 times: # 10 minutes
				wait 5 seconds
				send typing in the event-channel using the bot "trollvibe"
				if file "%{num.%id of event-message%}%.mp3" exists:
					wait 2 seconds
					upload "%{num.%id of event-message%}%.mp3" with name "FILE.mp3" with the content "<@!%id of event-member%>" to event-channel
					wait 5 seconds
					delete file "%{num.%id of event-message%}%.mp3"
					delete file "%{num.%id of event-message%}%.mp4"
					clear {num.%id of event-message%}
				else if file "%{num.%id of event-message%}%.m4a" exists:
					upload "%{num.%id of event-message%}%.m4a" with name "FILE.m4a" with the content "<@!%id of event-member%>" to event-channel
					wait 5 seconds
					delete file "%{num.%id of event-message%}%.m4a"
					delete file "%{num.%id of event-message%}%.mp4"
					clear {num.%id of event-message%}
					exit
				else:
					continue
			send createQuickEmbed("","‚ùå `Timed out, the track took too long to download`") to event-channel and store it in {_a}
			wait 10 seconds
			destroy {_a}
			exit
		else:
			send createQuickEmbed("","‚ùå `No argument was given.`") to event-channel
			exit

discord command videodl <text>:
	prefixes: ?
	aliases: dlv, ytdlv, downloadvideo, downloadv
	category: general
	usage: <video url/search term>
	description: Downloads and sends the mp4 of a video from most sites (I recommend using this in a server with 50mb file upload limit)
	trigger:
		set {_track} to arg-1
		set {num.%id of event-message%} to id of event-message
		if arg-1 is set:
			if "%arg-1%" contains "spotify":
				send createQuickEmbed("","‚ùå `Spotify is not supported.`") to event-channel
				exit
			if arg-1 contains "youtu.be":
				replace every "youtu.be/" with "youtube.com/watch?v=" in {_track}
			if arg-1 contains "youtube.com":
				replace every "&" with "##" in {_track}
				if arg-1 contains "shorts/":
					replace every "shorts/" with "watch?v=" in {_track}
			send typing in the event-channel using the bot "trollvibe"
			if the discord boost amount of event-guild is greater than or equal to 7:
				set line 1 in file "plugins/ytdl.sh" to "yt-dlp -o ""%{num.%id of event-message%}%.%%(ext)s"" %{_track}% -f ""b"" -S ""filesize~50m"" --no-playlist"
			else:
				set line 1 in file "plugins/ytdl.sh" to "yt-dlp -o ""%{num.%id of event-message%}%.%%(ext)s"" %{_track}% -f ""b"" -S ""filesize~8m"" --no-playlist"
			wait 0.5 seconds
			start file path "plugins/ytdl.sh"
			loop 120 times: # 10 minutes
				wait 5 seconds
				send typing in the event-channel using the bot "trollvibe"
				if file "%{num.%id of event-message%}%.mp4" exists:
					wait 10 seconds
					upload "%{num.%id of event-message%}%.mp4" with name "FILE.mp4" with the content "<@!%id of event-member%>" to event-channel
					wait 5 seconds
					delete file "%{num.%id of event-message%}%.mp4"
					clear {num.%id of event-message%}
					exit
				else:
					continue
			send createQuickEmbed("","‚ùå `Timed out, the track took too long to download or the requested format is not available. (File is possibly over 8mb and has no download options for it.)`") to event-channel
			exit
		else:
			send createQuickEmbed("","‚ùå `No argument was given.`") to event-channel
			exit

discord command queue [<number>]:
	prefixes: ?
	aliases: q
	category: music
	usage: [<number>]
	description: Shows you all of the songs the bot has queued.
	executable in: guild
	trigger:
		if arg-1 is set:
			set {%id of event-guild%.queuepage} to arg-1
			subtract 1 from {%id of event-guild%.queuepage} #Not gonna try -1 with something called 'arg-1' -9382
		else: #Im not learning quick expressions in skript -9382
			set {%id of event-guild%.queuepage} to 0
		clear {_count}
		set {%id of event-guild%.queue::*} to queue of event-guild
		set {_current} to the track the bot is playing in the event-guild
		if {_current} is not set:
			send createQuickEmbed("","‚ùå `There are no tracks in the queue.`") to event-channel
		else:
			set {_curfinaltime} to toSeconds(track duration of track the bot is playing in the event-guild)
			add {_curfinaltime} to {finaltime}
			if {%id of event-guild%.queue::*} is set:
				loop {%id of event-guild%.queue::*}:
					set {_finaltime} to toSeconds(track duration of loop-value)
					add {_finaltime} to {finaltime}
					add 1 to {_count}
			set {_maxpage} to floor({_count}/5)
			set {%id of event-guild%.queuepage} to floor(max(0,min({_maxpage},{%id of event-guild%.queuepage}))) #Incase custom set -9382
			set {finaltime} to "%{finaltime}% seconds" parsed as timespan
			set {finaltime} to "%{finaltime}%"
			clear {_B::*}
			make embed:
				set {_thumbnail} to track thumbnail of the track the bot is playing in the event-guild
				set color of embed to {@zencolour}
				if {_count} is not set:
					set {_count} to "0"
				set footer of embed to "%{_count}% Songs queued | Length: %{finaltime}%%nl%Page: %{%id of event-guild%.queuepage}+1%"
				set {_B::1} to "**__Now playing__**: %nl%[**%the track the bot is playing in the event-guild%**](%track url of the track the bot is playing in the event-guild%)%nl%"
				set {_index} to 1
				loop 5 times: #Looped so it looks cleaner -9382
					set {_position} to "%{_index}+5*{%id of event-guild%.queuepage}%"
					set {_B::%{_index}+1%} to "%{_position}%. [%{%id of event-guild%.queue::%{_position}%}%](%track url of {%id of event-guild%.queue::%{_position}%}%)"
					add 1 to {_index}
				replace every "maxresdefault.jpg" in {_thumbnail} with "0.jpg"
				set thumbnail of embed to {_thumbnail}
				if {%id of event-guild%.loopqueue} is true:
					add "%nl%üîÑ **The queue is looping**" to {_B::*}
				set description of embed to join {_B::*} with nl
			send last embed to event-channel and store it in {queueembed}
			clear {finaltime}
			set {_row} to new buttons row
			add new button with id "back" with style secondary with content "‚óÑ" to buttons of {_row}
			add new button with id "next" with style secondary with content "‚ñ∫" to buttons of {_row}
			add row {_row} to {queueembed}

discord command dj [<role>]:
	prefixes: ?
	executable in: guild
	usage: <role>
	category: admin
	description: Sets a role to have dj permissions.
	trigger:
		if event-member has permission administrator:
			if arg-1 is not set:
				loop {%id of event-guild%.dj::*}:
					add "%role with id loop-value%" to {_djlist::*}
				if {%id of event-guild%.dj::*} is not set:
					send createQuickEmbed("DJs", "%nl%No DJs are set.") to event-channel
				else:
					send createQuickEmbed("DJs", "%nl%%{_djlist::*}%") to event-channel
			else if {%id of event-guild%.dj::*} does not contain arg-1:
				add discord id of arg-1 to {%id of event-guild%.dj::*}
				send createQuickEmbed("", "‚úÖ `Added %arg-1% to the DJ list.`") to event-channel
				exit
			else:
				remove discord id of arg-1 from {%id of event-guild%.dj::*}
				send createQuickEmbed("", "‚úÖ `Removed %arg-1% from the DJ list.`") to event-channel
				exit
		else:
			send createQuickEmbed("","‚ùå `Insufficient permissions.`") to event-channel
			exit

on voice leave:
	set {_sm} to self member of bot named "trollvibe" in event-guild
	if event-member is not {_sm}:
		wait 1 minute
		set {_members::*} to audio members of voice channel of {_sm}
		if OR(check [size of {_members::*} = 1], check [{_members::1} is not set]) = true:
			disconnect bot of event-guild
			set repeating state of event-guild to no
	else:
		stop current queue of event-guild
		set repeating state of event-guild to no

discord command ping:
	prefixes: ?
	executable in: guild
	category: general
	description: Shows you the bot's ping.
	trigger:
		set {_unixtime} to unix timestamp of now
		send message "." to event-channel and store it in {_temp}
		set {_unixtime2} to unix timestamp of now
		destroy discord entity {_temp}
		subtract {_unixtime} from {_unixtime2}
		send "ping: %{_unixtime2}*1000%ms%nl%websocket ping: %discord bot ping of event-bot%" to event-channel

discord command boosterdj:
	prefixes: ?
	executable in: guild
	category: admin
	description: Allows or disallows boosters from using DJ.
	trigger:
		if {boosterdj} is not set:
			set {boosterdj} to true # on by default
			set {%event-guild%.boostrole} to boost role of event-guild
			if {%event-guild%.boostrole} is not set:
				send createQuickEmbed("","‚úÖ Boosters now have DJ permissions, but the booster role is not set in the server.") to event-channel
				exit
			else:
				send createQuickEmbed("","‚úÖ Boosters now have DJ permissions.") to event-channel
				exit
		if {boosterdj} is false:
			set {boosterdj} to true
			set {%event-guild%.boostrole} to boost role of event-guild
			if {%event-guild%.boostrole} is not set:
				send createQuickEmbed("","‚úÖ Boosters now have DJ permissions, but the booster role is not set in the server.") to event-channel
				exit # this is needed, it was doubling embeds otherwise
			else:
				send createQuickEmbed("","‚úÖ Boosters now have DJ permissions.") to event-channel
				exit
		if {boosterdj} is true:
			send createQuickEmbed("","‚úÖ Boosters no longer have DJ permissions.") to event-channel
			clear {%event-guild%.boostrole}
			set {boosterdj} to false

on message receive seen by "trollvibe":
	set {_att::*} to attachments of event-message
	if {_att::*} is not set:
		exit
	else:
		set {%id of event-guild%.attachmentmessage} to event-message

discord command caption <text>:
	prefixes: ?
	executable in: guild
	category: general
	usage: <text>
	aliases: cap
	description: Captions an image.
	trigger:
		if event-member has permission administrator:
			set {_att::*} to attachments of event-message
			if {_att::*} is none:
				set {_att::*} to attachments of referencing message of event-message
			if {att::*} is none:
				set {_att::*} to attachments of {%id of event-guild%.attachmentmessage}
			set {_url} to url of {_att::1}
			set {_img} to image from url {_url}
			set {_background} to new image with size 100, 100
			set {_width} to width of {_img}
			set {_height} to height of {_img}
			set {_num} to {_width}/10
			set {_text} to new font style with font name "Dialog" and with size {_num}
			if {_width} > 2000:
				set {_width} to {_width}/12
				set {_height} to {_height}/12
				set {_img} to resized {_img} to size {_width}, {_height} with algorithm 4
			set {_imgtext} to new image with size {_width}, {_height}
			draw arg-1 with font style {text} at {_width}, {_height}/9 with color from rgb 255, 255, 255 on {_imgtext} with align center
			set {_imgtext} to resized {_imgtext} to size {_width}, {_height} with algorithm 4
			draw image {_imgtext} on {_img} at 0, 0
			upload {_img}  to event-channel
			exit
		else:
			send createQuickEmbed("","‚ùå `Dev Command.`") to event-channel

discord command todo [<text>]:
	prefixes: ?
	executable in: guild
	category: admin
	usage: [<text/number>]
	description: Shows you what needs to be done or adds something to that list.
	trigger:
		if id of event-user is "211789389401948160":
			if arg-1 is not set:
				send createQuickEmbed("","%{todo::*}%") to event-channel
				exit
			if arg-1 parsed as number is a number:
				delete {todo::%arg-1%}
				send createQuickEmbed("","? removed it from the list of to-dos!") to event-channel
				exit
			add "%nl%%arg-1%" to {todo::*}
			send createQuickEmbed("","? added it to the list of to-dos!") to event-channel

command /uptime:
	trigger:
		set {_uptime} to uptime of bot named "trollvibe"
		send "%{_uptime}%" to console

discord command uptime:
	category: general
	description: Shows you how long the bot has been online for.
	prefixes: ?
	category: admin
	executable in: guild
	trigger:
		set {_uptime} to uptime of bot named "trollvibe"
		send createQuickEmbed("","‚è∞  %{_uptime}%") to event-channel

every 2 minutes:
	loop guilds of bot with name "trollvibe":
		add 1 to {_num}
	set presence of bot named "trollvibe" to playing "in %{_num}% servers | ?help"

on load:
	loop guilds of bot with name "trollvibe":
		add 1 to {_num}
	set presence of bot named "trollvibe" to playing "in %{_num}% servers | ?help"
	wait 10 seconds
	clear {_num}

command /start:
	trigger:
		set {botstatus} to "online"
		make new bot:
			enable all default intents
			login to {trollvibe} with name "trollvibe"
		wait 1 second
		execute console command "save-all"
		send "Loaded up." to console
		loop guilds of bot with name "trollvibe":
			add 1 to {_num}
		set presence of bot named "trollvibe" to playing "in %{_num}% servers | ?help"