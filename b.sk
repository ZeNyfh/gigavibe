discord command play [<string>]:
	prefixes: !
	aliases: p, youtube
	executable in: guild
	trigger:
		if {ratelimit} is set:
			make embed:
				set description of embed to "‚ùå `You are doing this command too quickly!`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			clear {ratelimit}
			exit
		set {ratelimit} to 1
		if arg 1 is not set:
			make embed:
				set description of embed to "‚ùå `You need to specify a URL or a Youtube search term.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			clear {ratelimit}
			exit
		set {_a} to channel of event-member in event-guild
		if {_a} is not set:
			make embed:
				set description of embed to "‚ùå `You need to be in a voice channel to use this command.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			clear {ratelimit}
			exit
		if arg-1 contains "http" or "https":
			if arg-1 contains "www.youtube.com/watch?v=" or "https://youtu.be/":
				connect event-bot to voice channel of event-member
				search in youtube for arg-1 and store it in {_searchresult::*}
				add {_searchresult::1} to {track::*}
				if {track::1} is not set:
					make embed:
						set description of embed to "‚ùå `No results were found.`"
						set color of embed to color from rgb 32, 34, 37
					send last embed to event-channel
					exit
				wait 1 second
				play {track::1} in event-guild
				set {unixtime} to unix timestamp of now
				clear {ratelimit}
				clear {_searchresult::*}
				make embed:
					set title of embed to "%{track::1}%"
					set thumbnail of embed to track thumbnail of {track::1}
					set title url of embed to track url of {track::1}
					set color of embed to color from rgb 32, 34, 37
					set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					add "Duration: `%track duration of {track::1}%`" to {_l::*}
					add "Channel: `%track author of {track::1}%`" to {_l::*}
					set description of embed to join {_l::*} with nl
				send last embed to event-channel
				clear {track::1}
				exit
			else:
				make embed:
					set description of embed to "‚ùå `This is not a valid link.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				clear {ratelimit}
				exit
		connect event-bot to voice channel of event-member
		search in youtube for arg-1 and store it in {_searchresult::*}
		add {_searchresult::1} to {track::*}
		if {track::1} is not set:
			make embed:
				set description of embed to "‚ùå `No results were found.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		wait 1 second
		play {track::1} in event-guild
		set {unixtime} to unix timestamp of now
		clear {_searchresult::*}
		make embed:
			set title of embed to "%{track::1}%"
			set thumbnail of embed to track thumbnail of {track::1}
			set title url of embed to track url of {track::1}
			set color of embed to color from rgb 32, 34, 37
			set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
			add "Duration: `%track duration of {track::1}%`" to {_l::*}
			add "Channel: `%track author of {track::1}%`" to {_l::*}
			set description of embed to join {_l::*} with nl
		send last embed to event-channel
		clear {track::1}
		clear {ratelimit}
		exit

on bot leave:
	clear queue of event-guild
	clear {track::*}

discord command np:
	aliases: nowplaying
	prefixes: !
	executable in: guild
	trigger:
		set {_current} to the track the bot is playing in the event-guild
		if {_current} is not set:
			make embed:
				set description of embed to "‚ùå `I am not playing anything.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			clear {totaltime}
			set {_unixtime} to unix timestamp of now
			set {tracktime} to {_unixtime} - {unixtime}
			clear {_42why::*}
			set {_totaltime} to track duration of {_current}
			set {_test} to "%{_totaltime}%" parsed as timespan
			set {_test} to "%{_test}%"
			set {_test1} to {_test}
			if {_test} contains "second" or "seconds":
				replace all " seconds" or " second" with "" in {_test}
			if {_test} contains "minute" or "minutes":
				replace all " minutes" or " minute" with "" in {_test}
			if {_test} contains " hours" or " hour":
				replace all " hours" or " hour" with "" in {_test}
			if {_test} contains " and":
				replace all " and" with "" in {_test}
			set {_timesplit::*} to "%{_test}%" split at " "
			if {_timesplit::3} is set:
				set {totaltime} to {_timesplit::1} * 3600
				add {_timesplit::2} * 60 to {totaltime}
				add {_timesplit::3} to {totaltime}
			if {_timesplit::3} is not set:
				if {_timesplit::2} is set:
					if {_test1} does not contain " hour" or " hours":
						set {_timesplit::1} to {_timesplit::1} parsed as number
						add {_timesplit::1} * 60 to {totaltime}
						add {_timesplit::2} parsed as number to {totaltime}
					if {_test1} does not contain " minute" or " minutes":
						set {_timesplit::1} to {_timesplit::1} parsed as number
						add {_timesplit::1} * 3600 to {finaltime}
						add {_timesplit::2} parsed as number to {finaltime}
					if {_test1} does not contain " second" or " seconds":
						set {_timesplit::1} to {_timesplit::1} parsed as number
						add {_timesplit::1} * 3600 to {totaltime}
						set {_timesplit::2} to {_timesplit::2} parsed as number
						add {_timesplit::2} * 60 to {totaltime}
			if {_timesplit::3} is not set:
				if {_timesplit::2} is not set:
					if {_timesplit::1} is set:
						add {_timesplit::1} parsed as number to {totaltime}
			set {_timeleft} to {totaltime} - {tracktime}
			set {_location} to 20-round( ({totaltime}-{tracktime})/{totaltime} * 20)
			if {_location} < 0:
				send "**an error has occurred**, location is less than 0 on this track. Report this here: https://www.github.com/ZeNyfh/gigavibe/issues" to event-channel
				exit
			if {_location} > 20.5:
				set {_line} to "üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 0:
				set {_line} to "üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 1:
				set {_line} to "‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 2:
				set {_line} to "‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 3:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 4:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 5:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 6:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 7:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 8:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 9:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 10:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 11:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 12:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 13:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 14:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 15:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 16:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 17:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨‚ñ¨"
			if {_location} is 18:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨‚ñ¨"
			if {_location} is 19:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò‚ñ¨"
			if {_location} is 20:
				set {_line} to "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨üîò" # there was no other way to do this, i hate skript
			make embed:
				set title of embed to "%{_current}%"
				set title url of embed to track url of {_current}
				set color of embed to color from rgb 32, 34, 37
				set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
				set thumbnail of embed to track thumbnail of {track::1}
				add "%nl%%nl%`%{_line}%`%nl%" to {_l::*}
				set {_tracktime} to "%{tracktime}% seconds" parsed as timespan
				set {_tracktime} to {_tracktime} 
				add "Duration: `%{_tracktime}% / %track duration of {_current}%`%nl%" to {_l::*}
				add "Channel: `%track author of {_current}%`" to {_l::*}
				if bot is repeating in event-guild:
					add "%nl%üîÑ `Looping`" to {_l::*}
				set description of embed to join {_l::*} with nl
			send last embed to event-channel
			clear {tracktime}
			clear {totaltime}
			exit

on track end seen by "Gigavibe":
	clear {totaltime}
	clear {tracktime}
	set {_members::*} to members in the voice channel of event-bot in event-guild
	loop {members::*}:
		if loop-value is a discord bot:
			remove loop-value from {_members::*}
	if {_members::*} is not set:
		disconnect bot of event-guild

on load:
	clear {userid::*}
	clear {votecount}
	clear {temp}
	clear {halfmembercount}
	clear {aaa}

discord command voteskip:
	aliases: skip
	prefixes: !
	executable in: guild
	trigger:
		set {_a} to channel of event-member in event-guild
		if {_a} is not set:
			make embed:
				set description of embed to "‚ùå `You need to be in a voice channel to use this command.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			add 1 to {temp}
			set {members::*} to members in the voice channel of event-member in event-guild
			loop {members::*}:
				if loop-value is a discord bot:
					remove loop-value from {members::*}
					remove 1 from {temp}
				if loop-value is a member:
					add 1 to {temp}
			if {userid::*} contains id of event-member:
				make embed:
					set description of embed to "‚ùå `You have already voted to skip.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
			set {_temptrack} to the track the bot is playing in the event-guild
			if {_temptrack} is not set:
				make embed:
					set description of embed to "‚ùå `No track is playing right now.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
			remove 1 from {temp}
			add 1 to {votecount}
			add id of event-member to {userid::*}
			set {halfmembercount} to round({temp}/2)
			clear {temp}
			if {votecount} is not {halfmembercount}:
				make embed:
					set {_B::1} to "‚úÖ You voted to skip the current track."
					set footer of embed to "%{votecount}% of %{halfmembercount}% needed to skip"
					set description of embed to join {_B::*} with nl
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
			else if {votecount} = {halfmembercount}:
				make embed:
					set description of embed to ":fast_forward: `Skipped`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				skip track of event-guild
				clear {userid::*}
				clear {votecount}
				clear {temp}
				clear {halfmembercount}
				clear {aaa}
				wait 60 seconds
				if the bot is playing in the event-guild: # this is backwards
					disconnect bot of event-guild
					set repeating state of event-guild to no
				exit

discord command forceskipall:
	aliases: fsall
	prefixes: !
	executable in: guild
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		if voice channel of event-bot in event-guild is not set:
			make embed:
				set description of embed to "‚ùå `I am not in a voice channel.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			set {_test} to event-member
			if {dj::*} is not set:
				make embed:
					set description of embed to "‚ùå `No DJs are set.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
			else:
				loop {dj::*}:
					set {_role} to loop-value parsed as role
					if {_test} has role {_role}:
						clear {queue::*}
						stop current queue of event-guild
						make embed:
							set description of embed to ":fast_forward: `Skipped all`"
							set color of embed to color from rgb 32, 34, 37
							set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
						send last embed to event-channel
						wait 60 seconds
						if the bot is playing in the event-guild: # this is backwards
							disconnect bot of event-guild
							set repeating state of event-guild to no
						exit
					else:
						continue
		make embed:
			set description of embed to "‚ùå `Insufficient permissions.`"
			set color of embed to color from rgb 32, 34, 37
		send last embed to event-channel
		exit

discord command forceskip:
	aliases: fs
	prefixes: !
	executable in: guild
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		if voice channel of event-bot in event-guild is not set:
			make embed:
				set description of embed to "‚ùå `I am not in a voice channel.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		if {dj::*} is not set:
			make embed:
				set description of embed to "‚ùå `No DJs are set.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			set {_test} to event-member
			loop {dj::*}:
				set {_role} to loop-value parsed as role
				if {_test} has role {_role}:
					skip track of event-guild
					make embed:
						set description of embed to ":fast_forward: `Skipped`"
						set color of embed to color from rgb 32, 34, 37
						set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					send last embed to event-channel
					wait 1 second
					play {track::1} in event-guild
					set {unixtime} to unix timestamp of now
					clear {votecount}
					wait 60 seconds
					if the bot is playing in the event-guild: # this is backwards
						disconnect bot of event-guild
						set repeating state of event-guild to no
					exit
				if {_test} does not have role {_role}:
					continue
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit

discord command leave:
	prefixes: !
	executable in: guild
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
		if voice channel of event-bot in event-guild is not set:
			make embed:
				set description of embed to "‚ùå `I am not in a voice channel.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		if {dj::*} is not set:
			make embed:
				set description of embed to "‚ùå `No DJs are set.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			set {_test} to event-member
			loop {dj::*}:
				set {_role} to loop-value parsed as role
				if {_test} has role {_role}:
					if voice channel of event-bot in event-guild is set:
						make embed:
							set description of embed to ":mailbox_with_no_mail: `Successfully disconnected.`"
							set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
							set color of embed to color from rgb 32, 34, 37
						send last embed to event-channel
						disconnect bot of event-guild
						clear {queue::*}
						clear {track::*}
						stop current queue of event-guild
						set repeating state of event-guild to no
						exit
					else:
						make embed:
							set title of embed to "I am not in a VC"
							set color of embed to color from rgb 32, 34, 37
						send last embed to event-channel
						exit
				else:
					continue
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit

discord command queue:
	prefixes: !
	aliases: q
	executable in: guild
	trigger:
		clear {finaltime}
		set {queue::*} to queue of event-guild
		set {_current} to the track the bot is playing in the event-guild
		if {_current} is not set:
			make embed:
				set description of embed to "‚ùå `There are no songs in the queue`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			if {_current} is set:
				set {_totaltime} to track duration of {_current}
				set {_test} to "%{_totaltime}%" parsed as timespan
				set {_test} to "%{_test}%"
				set {_test1} to "%{_test}%"
				replace all " seconds" or " second" with "" in {_test}
				replace all " minutes" or " minute" with "" in {_test}
				replace all " hours" or " hour" with "" in {_test}
				replace all " and" with "" in {_test}
				set {_timesplit::*} to "%{_test}%" split at " "
				if {_timesplit::3} is set:
					set {finaltime} to {timesplit::1} * 3600
					add {_timesplit::2} * 60 to {finaltime}
					add {_timesplit::3} to {finaltime}
				if {_timesplit::3} is not set:
					if {_timesplit::2} is set:
						if {_test1} does not contain " hour" or " hours":
							set {_timesplit::1} to {_timesplit::1} parsed as number
							add {_timesplit::1} * 60 to {finaltime}
							add {_timesplit::2} parsed as number to {finaltime}
						if {_test1} does not contain " minute" or " minutes":
							set {_timesplit::1} to {_timesplit::1} parsed as number
							add {_timesplit::1} * 3600 to {finaltime}
							add {_timesplit::2} parsed as number to {finaltime}
						if {_test1} does not contain " second" or " seconds":
							set {_timesplit::1} to {_timesplit::1} parsed as number
							add {_timesplit::1} * 3600 to {finaltime}
							set {_timesplit::2} to {_timesplit::2} parsed as number
							add {_timesplit::2} * 60 to {finaltime}							
				if {_timesplit::3} is not set:
					if {_timesplit::2} is not set:
						if {_timesplit::1} is set:
							add {_timesplit::1} parsed as number to {finaltime}
			if {queue::*} is set:
				loop {queue::*}:
					set {_totaltime} to track duration of loop-value
					set {_test} to "%{_totaltime}%" parsed as timespan
					set {_test} to "%{_test}%"
					replace all " seconds" or " second" with "" in {_test}
					replace all " minutes" or " minute" with "" in {_test}
					replace all " hours" or " hour" with "" in {_test}
					replace all " and" with "" in {_test}
					set {_timesplit::*} to "%{_test}%" split at " "
					if {_timesplit::3} is set:
						set {finaltime} to {timesplit::1} * 3600
						add {_timesplit::2} * 60 to {finaltime}
						add {_timesplit::3} to {finaltime}
					if {_timesplit::3} is not set:
						if {_timesplit::2} is set:
							set {_timesplit::1} to {_timesplit::1} parsed as number
							add {_timesplit::1} * 60 to {finaltime}
							add {_timesplit::2} parsed as number to {finaltime}
					if {_timesplit::3} is not set:
						if {_timesplit::2} is not set:
							if {_timesplit::1} is set:
								add {_timesplit::1} parsed as number to {finaltime}
			set {finaltime} to "%{finaltime}% seconds" parsed as timespan
			set {finaltime} to "%{finaltime}%"
			clear {_B::*}
			make embed:
				set color of embed to color from rgb 32, 34, 37
				set footer of embed to "Queue length: %{finaltime}%"
				set {_B::1} to "üìù `Queue`%nl%"
				set {_B::2} to "`Now playing:` [**%{_current}%**](%track url of {_current}%)"
				set {_B::3} to "2.[%{queue::1}%](%track url of {queue::1}%)"
				set {_B::4} to "3.[%{queue::2}%](%track url of {queue::2}%)"
				set {_B::5} to "4.[%{queue::3}%](%track url of {queue::3}%)"
				set {_B::6} to "5.[%{queue::4}%](%track url of {queue::4}%)"
				set description of embed to join {_B::*} with nl
			send last embed to event-channel
			clear {finaltime}
			wait 1 seconds
			exit

discord command reload:
	prefixes: !
	trigger:
		if discord id of event-member is "211789389401948160":
			send "Successfully reloaded." to event-channel
			execute console command "skript reload b"
		exit

discord command help:
	aliases: cmds
	prefixes: !
	executable in: guild
	trigger:
		set {_loop} to true
		set {_linecount} to 0
		while {_loop} is true:
			add 1 to {_linecount}
			add line {_linecount} in file "plugins/helplog.txt" to {_helplist::*}
			if {_linecount} = line count of file "plugins/helplog.txt":
				set {_loop} to false
				make embed:
					set color of embed to color from rgb 32, 34, 37
					set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					set description of embed to join {_helplist::*} with nl
					set title of embed to "**üìî `Commands`**"
				send last embed to event-channel and store it in {helpembed}
				set {_row} to new buttons row
				add new button with id "help" with style secondary with text "General" to buttons of {_row}
				add new button with id "dj" with style secondary with text "Audio" to buttons of {_row}
				add new button with id "admin" with style secondary with text "Admin" to buttons of {_row}
				add row {_row} to {helpembed}

discord command github:
	prefixes: !
	aliases: bug
	executable in: guild
	trigger:
		make embed:
			set color of embed to color from rgb 32, 34, 37
			add "‚ùï `Use this for bug reports and feature requests ONLY`%nl%" to {_a::*}
			add "‚ùï `When making an issue, make sure to specify which bot has the bug (gigavibe or trollvibe)`%nl%" to {_a::*}
			add "https://github.com/ZeNyfh/gigavibe/issues" to {_a::*}
			set description of embed to join {_a::*} with nl
		send last embed to event-channel

on button click:
	set {_row} to new buttons row
	add new button with id "help" with style secondary with text "General" to buttons of {_row}
	add new button with id "dj" with style secondary with text "Audio" to buttons of {_row}
	add new button with id "admin" with style secondary with text "Admin" to buttons of {_row}
	set {_id} to discord id of event-button
	if {_id} is "dj":
		set {_loop} to true
		set {_linecount} to 0
		while {_loop} is true:
			add 1 to {_linecount}
			add line {_linecount} in file "plugins/djlog.txt" to {_helplist::*}
			if {_linecount} = line count of file "plugins/djlog.txt":
				set {_loop} to false
				make embed:
					set color of embed to color from rgb 32, 34, 37
					set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					set description of embed to join {_helplist::*} with nl
					set title of embed to "üîä `Audio`"
				set {_embed} to last embed
				delete discord entity {helpembed}
				delete discord entity {embed}
				send last embed to event-channel and store it in {embed}
				wait 0.5 seconds
				add row {_row} to {embed}
	if {_id} is "admin":
		set {_loop} to true
		set {_linecount} to 0
		while {_loop} is true:
			add 1 to {_linecount}
			add line {_linecount} in file "plugins/adminlog.txt" to {_helplist::*}
			if {_linecount} = line count of file "plugins/adminlog.txt":
				set {_loop} to false
				make embed:
					set color of embed to color from rgb 32, 34, 37
					set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					set description of embed to join {_helplist::*} with nl
					set title of embed to "üìù `Admin Help`"
				set {_embed} to last embed
				delete discord entity {helpembed}
				delete discord entity {embed}
				send last embed to event-channel and store it in {embed}
				wait 0.5 seconds
				add row {_row} to {embed}
	if {_id} is "help":
		set {_loop} to true
		set {_linecount} to 0
		while {_loop} is true:
			add 1 to {_linecount}
			add line {_linecount} in file "plugins/generallog.txt" to {_helplist::*}
			if {_linecount} = line count of file "plugins/generallog.txt":
				set {_loop} to false
				make embed:
					set color of embed to color from rgb 32, 34, 37
					set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					set description of embed to join {_helplist::*} with nl
					set title of embed to "üìñ `Help`"
				set {_embed} to last embed
				delete discord entity {embed}
				delete discord entity {helpembed}
				send last embed to event-channel and store it in {embed}
				wait 0.5 seconds
				add row {_row} to {embed}

discord command clear queue:
	aliases: queue clear, clearqueue, queueclear
	prefixes: !
	executable in: guild
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
		if {dj::*} is not set:
			make embed:
				set description of embed to "‚ùå `No DJs are set.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			set {_test} to event-member
			loop {dj::*}:
				set {_role} to loop-value parsed as role
				if {_test} has role {_role}:
					clear {track::*}
					clear {queue::*}
					clear queue of event-guild
					stop queue of event-guild
					set {_tracks::*} to {_queue::*}
					make embed:
						set color of embed to color from rgb 32, 34, 37
						set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
						set description of embed to "‚úÖ `Cleared the queue`"
					send last embed to event-channel
					exit
				else:
					continue
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit

discord command whitelist <text>:
	prefixes: !
	executable in: guild
	trigger:
		if event-member does not have permission message manage:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			set {cancer2} to arg-1 parsed as member
			set {cancer1} to id of {cancer2}
			if {blockeddj::*} contains {cancer1}:
				remove {cancer1} from {blockeddj::*}
				make embed:
					set description of embed to "‚úÖ `whitelisted %{cancer2}%.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
			if {blockeddj::*} contains discord id of event-member:
				make embed:
					set description of embed to "‚ùå `Insufficient permissions.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
			else:
				set {cancer1} to arg-1 parsed as member
				if {blockeddj::*} contains {cancer1}:
					remove {cancer1} from {blockeddj::*}
					make embed:
						set description of embed to "‚úÖ `whitelisted %{cancer2}%.`"
						set color of embed to color from rgb 32, 34, 37
						send last embed to event-channel
				else:
					make embed:
						set description of embed to "‚ùå `This person is not blacklisted.`"
						set color of embed to color from rgb 32, 34, 37
					send last embed to event-channel
					exit

discord command clearblacklist:
	aliases: blacklistclear
	prefixes: !
	executable in: guild
	trigger:
		if event-member has permission message manage:
			clear {blockeddj::*}
			make embed:
				set description of embed to "‚úÖ `cleared the blacklist`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit

discord command loop:
	executable in: guild
	aliases: unloop
	prefixes: !
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		set {_test} to event-member
		if {dj::*} is not set:
			make embed:
				set description of embed to "‚ùå `No DJs are set.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			loop {dj::*}:
				set {_role} to loop-value parsed as role
				if {_test} has role {_role}:
					if bot is repeating in event-guild:
						set repeating state of event-guild to no
						make embed:
							set description of embed to "‚úÖ `No longer looping the current track.`"
							set color of embed to color from rgb 32, 34, 37
						send last embed to event-channel
						exit
					else:
						set repeating state of event-guild to yes
						make embed:
							set description of embed to "üîÑ `Looping the current track.`"
							set color of embed to color from rgb 32, 34, 37
						send last embed to event-channel
						exit
				else:
					continue
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit

discord command blacklist [<text>]:
	prefixes: !
	executable in: guild
	trigger:
		if event-member does not have permission message manage:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
		if arg-1 is not set:
			make embed:
				set description of embed to join {blockeddj::*} with nl
				set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
		else:
			set {_a} to arg-1 parsed as member
			set {blockeddj::*} to id of discord entity {_a}
			make embed:
				set description of embed to "‚úÖ `blacklisted %{_a}%.`"
				set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
			exit

discord command dj [<text>]:
	prefixes: !
	executable in: guild
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
		if arg-1 is "list":
			make embed:
				set color of embed to color from rgb 32, 34, 37
				set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
				set description of embed to join {dj::*} with nl
				set title of embed to "`DJs`"
			send last embed to event-channel
			exit
		if arg-1 is "clear":
			exit
		set {_parse} to discord name of arg-1 parsed as role
		if event-member does not have permission message manage:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		else:
			if {_parse} is not set:
				make embed:
					set description of embed to "‚ùå `The argument given was not a role.`"
					set color of embed to color from rgb 32, 34, 37
				send last embed to event-channel
				exit
			if {dj::*} is not set:
				add arg-1 to {dj::*}
				make embed:
					set color of embed to color from rgb 32, 34, 37
					set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
					set description of embed to "‚úÖ `added {%{_parse}%} to DJs`"
				send last embed to event-channel
				exit
			if {dj::*} is set:
				if {dj::*} does not contain arg-1:
					add arg-1 to {dj::*}
					make embed:
						set color of embed to color from rgb 32, 34, 37
						set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
						set description of embed to "‚úÖ `added {%{_parse}%} to DJs`"
					send last embed to event-channel
					exit
				else:
					remove arg-1 from {dj::*}
					make embed:
						set color of embed to color from rgb 32, 34, 37
						set footer of embed to "Executed by %discord name of event-member%##%discord tag of event-member%"
						set description of embed to "‚úÖ `removed {%{_parse}%} from DJs`"
					send last embed to event-channel
					exit

on load:
	clear {check}
	exit

discord command djclear:
	prefixes: !
	aliases: cleardj
	executable in: guild
	trigger:
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to dark grey
				send last embed to event-channel
				exit
		if event-member does not have permission message manage:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to dark grey
			send last embed to event-channel
			exit
		make embed:
			set color of embed to dark grey
			set footer of embed to "Executed by %discord name of event-user%##%discord tag of event-member%"
			set title of embed to "‚úÖ `Cleared all DJs`"
		clear {dj::*}
		send last embed to event-channel
		exit

discord command djlist:
	prefixes: !
	executable in: guild
	trigger:
		remove all "zenyfhwashere" from {dj::*}
		if {blockeddj::*} contains discord id of event-member:
			make embed:
				set description of embed to "‚ùå `Insufficient permissions.`"
				set color of embed to dark grey
				send last embed to event-channel
				exit
		if {dj::*} is not set:
			make embed:
				set description of embed to "‚ùå `There are No DJs.`"
				set color of embed to color from rgb 32, 34, 37
			send last embed to event-channel
			exit
		set {_test} to event-member
		loop {dj::*}:
			set {_role} to loop-value parsed as role
			if {_test} has role {_role}:
				make embed:
					set color of embed to dark grey
					set footer of embed to "Executed by %discord name of event-user%##%discord tag of event-member%"
					set description of embed to join {dj::*} with nl
					set title of embed to "`DJs`"
				send last embed to event-channel
				exit
			else:
				continue
		make embed:
			set description of embed to "‚ùå `Insufficient permissions.`"
			set color of embed to color from rgb 32, 34, 37
		send last embed to event-channel
		exit 

on track start seen by "Gigavibe":
	set {unixtime} to unix timestamp of now
	exit
	
on track end seen by "Gigavibe":
	clear {tracktime}
	clear {totaltime}
	wait 60 seconds
	clear {tracktime}
	clear {totaltime}
	set {_tempid} to {track::1}
	if {_tempid} is {trackid}:
		skip track of event-guild
	else:
		exit

on track end seen by "Gigavibe":
	clear {userid::*}
	clear {userid::*}
	clear {temp}
	clear {votecount}
	clear {temp}
	clear {userid::*}
	clear {halfmembercount}
	clear {votecount}
	clear {aaa}
	wait 60 seconds
	if the bot is playing in the event-guild: # this is backwards
		disconnect bot of event-guild
		clear {track::*}
		clear {queue::*}
		clear queue of event-guild
		if repeating state of event-guild is yes:
			set repeating state of event-guild to no
		exit

on track end seen by "Gigavibe":
	clear {track::1}
	if {track::1} is set:
		play {track::1} in event-guild
		set repeating state of event-guild to no
		exit

discord command ping:
	prefixes: !
	executable in: guild
	trigger:
		set {_unixtime} to unix timestamp of now
		send message "." to event-channel and store it in {_temp}
		set {_unixtime2} to unix timestamp of now
		delete discord entity {_temp}
		subtract {_unixtime} from {_unixtime2}
		send "ping: %{_unixtime2}*1000%ms" to event-channel
		exit

command /uptime:
	trigger:
		set {_uptime} to uptime of bot named "Gigavibe"
		send "%{_uptime}%" to console

command /startgiga:
	trigger:
		if "Gigavibe" is loaded:
			send "This will have catastrophic results, no." to console
			exit
		login to {tokenvibe} with name "Gigavibe"
		execute console command "save-all"
		send "Loaded up." to console
		exit